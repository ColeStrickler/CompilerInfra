Terminals unused in grammar

    CUSTOM
    REF


Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: globals decl
    3        | ε

    4 decl: varDecl SEMICOL
    5     | fnDecl

    6 varDecl: name COLON type
    7        | name COLON type ASSIGN exp

    8 type: IMMUTABLE primType
    9     | primType

   10 primType: INT
   11         | BOOL
   12         | VOID

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

   14 maybeFormals: ε
   15             | formalList

   16 formalList: formalDecl
   17           | formalList COMMA formalDecl

   18 formalDecl: name COLON type

   19 stmtList: ε
   20         | stmtList stmt SEMICOL
   21         | stmtList blockStmt

   22 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY
   23          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY
   24          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

   25 stmt: varDecl
   26     | loc ASSIGN exp
   27     | callExp
   28     | loc POSTDEC
   29     | loc POSTINC
   30     | TOCONSOLE exp
   31     | FROMCONSOLE loc
   32     | MAYBE loc MEANS exp OTHERWISE exp
   33     | RETURN exp
   34     | RETURN

   35 exp: exp DASH exp
   36    | exp CROSS exp
   37    | exp STAR exp
   38    | exp SLASH exp
   39    | exp AND exp
   40    | exp OR exp
   41    | exp EQUALS exp
   42    | exp NOTEQUALS exp
   43    | exp GREATER exp
   44    | exp GREATEREQ exp
   45    | exp LESS exp
   46    | exp LESSEQ exp
   47    | NOT exp
   48    | DASH term
   49    | term

   50 callExp: loc LPAREN RPAREN
   51        | loc LPAREN actualsList RPAREN

   52 actualsList: exp
   53            | actualsList COMMA exp

   54 term: loc
   55     | INTLITERAL
   56     | STRINGLITERAL
   57     | TRUE
   58     | FALSE
   59     | EH
   60     | LPAREN exp RPAREN
   61     | callExp

   62 loc: name

   63 name: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AND <a_lang::Token *> (258) 39
    ASSIGN <a_lang::Token *> (259) 7 26
    ARROW <a_lang::Token *> (260) 13
    BOOL <a_lang::Token *> (261) 11
    COLON <a_lang::Token *> (262) 6 7 13 18
    COMMA <a_lang::Token *> (263) 17 53
    CUSTOM <a_lang::Token *> (264)
    DASH <a_lang::Token *> (265) 35 48
    ELSE <a_lang::Token *> (266) 24
    EH <a_lang::Token *> (267) 59
    EQUALS <a_lang::Token *> (268) 41
    FALSE <a_lang::Token *> (269) 58
    FROMCONSOLE <a_lang::Token *> (270) 31
    GREATER <a_lang::Token *> (271) 43
    GREATEREQ <a_lang::Token *> (272) 44
    ID <a_lang::IDToken *> (273) 63
    IF <a_lang::Token *> (274) 23 24
    INT <a_lang::Token *> (275) 10
    INTLITERAL <a_lang::IntLitToken *> (276) 55
    IMMUTABLE <a_lang::Token *> (277) 8
    LCURLY <a_lang::Token *> (278) 13 22 23 24
    LESS <a_lang::Token *> (279) 45
    LESSEQ <a_lang::Token *> (280) 46
    LPAREN <a_lang::Token *> (281) 13 22 23 24 50 51 60
    MAYBE <a_lang::Token *> (282) 32
    MEANS <a_lang::Token *> (283) 32
    NOT <a_lang::Token *> (284) 47
    NOTEQUALS <a_lang::Token *> (285) 42
    OR <a_lang::Token *> (286) 40
    OTHERWISE <a_lang::Token *> (287) 32
    CROSS <a_lang::Token *> (288) 36
    POSTDEC <a_lang::Token *> (289) 28
    POSTINC <a_lang::Token *> (290) 29
    RETURN <a_lang::Token *> (291) 33 34
    RCURLY <a_lang::Token *> (292) 13 22 23 24
    REF <a_lang::Token *> (293)
    RPAREN <a_lang::Token *> (294) 13 22 23 24 50 51 60
    SEMICOL <a_lang::Token *> (295) 4 20
    SLASH <a_lang::Token *> (296) 38
    STAR <a_lang::Token *> (297) 37
    STRINGLITERAL <a_lang::StrToken *> (298) 56
    TOCONSOLE <a_lang::Token *> (299) 30
    TRUE <a_lang::Token *> (300) 57
    VOID <a_lang::Token *> (301) 12
    WHILE <a_lang::Token *> (302) 22


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program <a_lang::ProgramNode *> (49)
        on left: 1
        on right: 0
    globals <std::list<a_lang::DeclNode *> *> (50)
        on left: 2 3
        on right: 1 2
    decl <a_lang::DeclNode *> (51)
        on left: 4 5
        on right: 2
    varDecl <a_lang::VarDeclNode *> (52)
        on left: 6 7
        on right: 4 25
    type <a_lang::TypeNode *> (53)
        on left: 8 9
        on right: 6 7 13 18
    primType <a_lang::TypeNode *> (54)
        on left: 10 11 12
        on right: 8 9
    fnDecl <a_lang::FnDeclNode *> (55)
        on left: 13
        on right: 5
    maybeFormals <std::list<a_lang::FormalDeclNode *> *> (56)
        on left: 14 15
        on right: 13
    formalList <std::list<a_lang::FormalDeclNode *> *> (57)
        on left: 16 17
        on right: 15 17
    formalDecl <a_lang::FormalDeclNode *> (58)
        on left: 18
        on right: 16 17
    stmtList <std::list<a_lang::StmtNode *> *> (59)
        on left: 19 20 21
        on right: 13 20 21 22 23 24
    blockStmt <a_lang::StmtNode *> (60)
        on left: 22 23 24
        on right: 21
    stmt <a_lang::StmtNode *> (61)
        on left: 25 26 27 28 29 30 31 32 33 34
        on right: 20
    exp <a_lang::ExpNode *> (62)
        on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
        on right: 7 22 23 24 26 30 32 33 35 36 37 38 39 40 41 42 43 44 45 46 47 52 53 60
    callExp <a_lang::CallExpNode *> (63)
        on left: 50 51
        on right: 27 61
    actualsList <std::list<a_lang::ExpNode *> *> (64)
        on left: 52 53
        on right: 51 53
    term <a_lang::ExpNode *> (65)
        on left: 54 55 56 57 58 59 60 61
        on right: 48 49
    loc <a_lang::LocNode *> (66)
        on left: 62
        on right: 26 28 29 31 32 50 51 54
    name <a_lang::IDNode *> (67)
        on left: 63
        on right: 6 7 13 18 62


State 0

    0 $accept: • program "end file"

    $default  reduce using rule 3 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program • "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals •
    2 globals: globals • decl

    ID  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl     go to state 5
    varDecl  go to state 6
    fnDecl   go to state 7
    name     go to state 8


State 3

    0 $accept: program "end file" •

    $default  accept


State 4

   63 name: ID •

    $default  reduce using rule 63 (name)


State 5

    2 globals: globals decl •

    $default  reduce using rule 2 (globals)


State 6

    4 decl: varDecl • SEMICOL

    SEMICOL  shift, and go to state 9


State 7

    5 decl: fnDecl •

    $default  reduce using rule 5 (decl)


State 8

    6 varDecl: name • COLON type
    7        | name • COLON type ASSIGN exp
   13 fnDecl: name • COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    COLON  shift, and go to state 10


State 9

    4 decl: varDecl SEMICOL •

    $default  reduce using rule 4 (decl)


State 10

    6 varDecl: name COLON • type
    7        | name COLON • type ASSIGN exp
   13 fnDecl: name COLON • LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    BOOL       shift, and go to state 11
    INT        shift, and go to state 12
    IMMUTABLE  shift, and go to state 13
    LPAREN     shift, and go to state 14
    VOID       shift, and go to state 15

    type      go to state 16
    primType  go to state 17


State 11

   11 primType: BOOL •

    $default  reduce using rule 11 (primType)


State 12

   10 primType: INT •

    $default  reduce using rule 10 (primType)


State 13

    8 type: IMMUTABLE • primType

    BOOL  shift, and go to state 11
    INT   shift, and go to state 12
    VOID  shift, and go to state 15

    primType  go to state 18


State 14

   13 fnDecl: name COLON LPAREN • maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    ID  shift, and go to state 4

    $default  reduce using rule 14 (maybeFormals)

    maybeFormals  go to state 19
    formalList    go to state 20
    formalDecl    go to state 21
    name          go to state 22


State 15

   12 primType: VOID •

    $default  reduce using rule 12 (primType)


State 16

    6 varDecl: name COLON type •
    7        | name COLON type • ASSIGN exp

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 6 (varDecl)


State 17

    9 type: primType •

    $default  reduce using rule 9 (type)


State 18

    8 type: IMMUTABLE primType •

    $default  reduce using rule 8 (type)


State 19

   13 fnDecl: name COLON LPAREN maybeFormals • RPAREN ARROW type LCURLY stmtList RCURLY

    RPAREN  shift, and go to state 24


State 20

   15 maybeFormals: formalList •
   17 formalList: formalList • COMMA formalDecl

    COMMA  shift, and go to state 25

    $default  reduce using rule 15 (maybeFormals)


State 21

   16 formalList: formalDecl •

    $default  reduce using rule 16 (formalList)


State 22

   18 formalDecl: name • COLON type

    COLON  shift, and go to state 26


State 23

    7 varDecl: name COLON type ASSIGN • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 35
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 24

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN • ARROW type LCURLY stmtList RCURLY

    ARROW  shift, and go to state 40


State 25

   17 formalList: formalList COMMA • formalDecl

    ID  shift, and go to state 4

    formalDecl  go to state 41
    name        go to state 22


State 26

   18 formalDecl: name COLON • type

    BOOL       shift, and go to state 11
    INT        shift, and go to state 12
    IMMUTABLE  shift, and go to state 13
    VOID       shift, and go to state 15

    type      go to state 42
    primType  go to state 17


State 27

   48 exp: DASH • term

    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    callExp  go to state 36
    term     go to state 43
    loc      go to state 38
    name     go to state 39


State 28

   59 term: EH •

    $default  reduce using rule 59 (term)


State 29

   58 term: FALSE •

    $default  reduce using rule 58 (term)


State 30

   55 term: INTLITERAL •

    $default  reduce using rule 55 (term)


State 31

   60 term: LPAREN • exp RPAREN

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 44
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 32

   47 exp: NOT • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 45
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 33

   56 term: STRINGLITERAL •

    $default  reduce using rule 56 (term)


State 34

   57 term: TRUE •

    $default  reduce using rule 57 (term)


State 35

    7 varDecl: name COLON type ASSIGN exp •
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 7 (varDecl)


State 36

   61 term: callExp •

    $default  reduce using rule 61 (term)


State 37

   49 exp: term •

    $default  reduce using rule 49 (exp)


State 38

   50 callExp: loc • LPAREN RPAREN
   51        | loc • LPAREN actualsList RPAREN
   54 term: loc •

    LPAREN  shift, and go to state 58

    $default  reduce using rule 54 (term)


State 39

   62 loc: name •

    $default  reduce using rule 62 (loc)


State 40

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW • type LCURLY stmtList RCURLY

    BOOL       shift, and go to state 11
    INT        shift, and go to state 12
    IMMUTABLE  shift, and go to state 13
    VOID       shift, and go to state 15

    type      go to state 59
    primType  go to state 17


State 41

   17 formalList: formalList COMMA formalDecl •

    $default  reduce using rule 17 (formalList)


State 42

   18 formalDecl: name COLON type •

    $default  reduce using rule 18 (formalDecl)


State 43

   48 exp: DASH term •

    $default  reduce using rule 48 (exp)


State 44

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp
   60 term: LPAREN exp • RPAREN

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    RPAREN     shift, and go to state 60
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57


State 45

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp
   47    | NOT exp •

    $default  reduce using rule 47 (exp)


State 46

   39 exp: exp AND • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 61
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 47

   35 exp: exp DASH • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 62
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 48

   41 exp: exp EQUALS • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 63
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 49

   43 exp: exp GREATER • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 64
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 50

   44 exp: exp GREATEREQ • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 65
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 51

   45 exp: exp LESS • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 66
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 52

   46 exp: exp LESSEQ • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 67
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 53

   42 exp: exp NOTEQUALS • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 68
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 54

   40 exp: exp OR • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 69
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 55

   36 exp: exp CROSS • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 70
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 56

   38 exp: exp SLASH • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 71
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 57

   37 exp: exp STAR • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 72
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 58

   50 callExp: loc LPAREN • RPAREN
   51        | loc LPAREN • actualsList RPAREN

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    RPAREN         shift, and go to state 73
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp          go to state 74
    callExp      go to state 36
    actualsList  go to state 75
    term         go to state 37
    loc          go to state 38
    name         go to state 39


State 59

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 76


State 60

   60 term: LPAREN exp RPAREN •

    $default  reduce using rule 60 (term)


State 61

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   39    | exp AND exp •
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 39 (exp)


State 62

   35 exp: exp • DASH exp
   35    | exp DASH exp •
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    $default  reduce using rule 35 (exp)


State 63

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   41    | exp EQUALS exp •
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    DASH   shift, and go to state 47
    CROSS  shift, and go to state 55
    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 41 (exp)


State 64

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   43    | exp GREATER exp •
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    DASH   shift, and go to state 47
    CROSS  shift, and go to state 55
    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 43 (exp)


State 65

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   44    | exp GREATEREQ exp •
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    DASH   shift, and go to state 47
    CROSS  shift, and go to state 55
    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 44 (exp)


State 66

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   45    | exp LESS exp •
   46    | exp • LESSEQ exp

    DASH   shift, and go to state 47
    CROSS  shift, and go to state 55
    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 45 (exp)


State 67

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp
   46    | exp LESSEQ exp •

    DASH   shift, and go to state 47
    CROSS  shift, and go to state 55
    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 46 (exp)


State 68

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   42    | exp NOTEQUALS exp •
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    DASH   shift, and go to state 47
    CROSS  shift, and go to state 55
    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 42 (exp)


State 69

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   40    | exp OR exp •
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 40 (exp)


State 70

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   36    | exp CROSS exp •
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    SLASH  shift, and go to state 56
    STAR   shift, and go to state 57

    $default  reduce using rule 36 (exp)


State 71

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   38    | exp SLASH exp •
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    $default  reduce using rule 38 (exp)


State 72

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   37    | exp STAR exp •
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    $default  reduce using rule 37 (exp)


State 73

   50 callExp: loc LPAREN RPAREN •

    $default  reduce using rule 50 (callExp)


State 74

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp
   52 actualsList: exp •

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 52 (actualsList)


State 75

   51 callExp: loc LPAREN actualsList • RPAREN
   53 actualsList: actualsList • COMMA exp

    COMMA   shift, and go to state 77
    RPAREN  shift, and go to state 78


State 76

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY • stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 79


State 77

   53 actualsList: actualsList COMMA • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 80
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 78

   51 callExp: loc LPAREN actualsList RPAREN •

    $default  reduce using rule 51 (callExp)


State 79

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList • RCURLY
   20 stmtList: stmtList • stmt SEMICOL
   21         | stmtList • blockStmt

    FROMCONSOLE  shift, and go to state 81
    ID           shift, and go to state 4
    IF           shift, and go to state 82
    MAYBE        shift, and go to state 83
    RETURN       shift, and go to state 84
    RCURLY       shift, and go to state 85
    TOCONSOLE    shift, and go to state 86
    WHILE        shift, and go to state 87

    varDecl    go to state 88
    blockStmt  go to state 89
    stmt       go to state 90
    callExp    go to state 91
    loc        go to state 92
    name       go to state 93


State 80

   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp
   53 actualsList: actualsList COMMA exp •

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 53 (actualsList)


State 81

   31 stmt: FROMCONSOLE • loc

    ID  shift, and go to state 4

    loc   go to state 94
    name  go to state 39


State 82

   23 blockStmt: IF • LPAREN exp RPAREN LCURLY stmtList RCURLY
   24          | IF • LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 95


State 83

   32 stmt: MAYBE • loc MEANS exp OTHERWISE exp

    ID  shift, and go to state 4

    loc   go to state 96
    name  go to state 39


State 84

   33 stmt: RETURN • exp
   34     | RETURN •

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    $default  reduce using rule 34 (stmt)

    exp      go to state 97
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 85

   13 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY •

    $default  reduce using rule 13 (fnDecl)


State 86

   30 stmt: TOCONSOLE • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 98
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 87

   22 blockStmt: WHILE • LPAREN exp RPAREN LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 99


State 88

   25 stmt: varDecl •

    $default  reduce using rule 25 (stmt)


State 89

   21 stmtList: stmtList blockStmt •

    $default  reduce using rule 21 (stmtList)


State 90

   20 stmtList: stmtList stmt • SEMICOL

    SEMICOL  shift, and go to state 100


State 91

   27 stmt: callExp •

    $default  reduce using rule 27 (stmt)


State 92

   26 stmt: loc • ASSIGN exp
   28     | loc • POSTDEC
   29     | loc • POSTINC
   50 callExp: loc • LPAREN RPAREN
   51        | loc • LPAREN actualsList RPAREN

    ASSIGN   shift, and go to state 101
    LPAREN   shift, and go to state 58
    POSTDEC  shift, and go to state 102
    POSTINC  shift, and go to state 103


State 93

    6 varDecl: name • COLON type
    7        | name • COLON type ASSIGN exp
   62 loc: name •

    COLON  shift, and go to state 104

    $default  reduce using rule 62 (loc)


State 94

   31 stmt: FROMCONSOLE loc •

    $default  reduce using rule 31 (stmt)


State 95

   23 blockStmt: IF LPAREN • exp RPAREN LCURLY stmtList RCURLY
   24          | IF LPAREN • exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 105
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 96

   32 stmt: MAYBE loc • MEANS exp OTHERWISE exp

    MEANS  shift, and go to state 106


State 97

   33 stmt: RETURN exp •
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 33 (stmt)


State 98

   30 stmt: TOCONSOLE exp •
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 30 (stmt)


State 99

   22 blockStmt: WHILE LPAREN • exp RPAREN LCURLY stmtList RCURLY

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 107
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 100

   20 stmtList: stmtList stmt SEMICOL •

    $default  reduce using rule 20 (stmtList)


State 101

   26 stmt: loc ASSIGN • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 108
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 102

   28 stmt: loc POSTDEC •

    $default  reduce using rule 28 (stmt)


State 103

   29 stmt: loc POSTINC •

    $default  reduce using rule 29 (stmt)


State 104

    6 varDecl: name COLON • type
    7        | name COLON • type ASSIGN exp

    BOOL       shift, and go to state 11
    INT        shift, and go to state 12
    IMMUTABLE  shift, and go to state 13
    VOID       shift, and go to state 15

    type      go to state 16
    primType  go to state 17


State 105

   23 blockStmt: IF LPAREN exp • RPAREN LCURLY stmtList RCURLY
   24          | IF LPAREN exp • RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    RPAREN     shift, and go to state 109
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57


State 106

   32 stmt: MAYBE loc MEANS • exp OTHERWISE exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 110
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 107

   22 blockStmt: WHILE LPAREN exp • RPAREN LCURLY stmtList RCURLY
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    RPAREN     shift, and go to state 111
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57


State 108

   26 stmt: loc ASSIGN exp •
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 26 (stmt)


State 109

   23 blockStmt: IF LPAREN exp RPAREN • LCURLY stmtList RCURLY
   24          | IF LPAREN exp RPAREN • LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 112


State 110

   32 stmt: MAYBE loc MEANS exp • OTHERWISE exp
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    OTHERWISE  shift, and go to state 113
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57


State 111

   22 blockStmt: WHILE LPAREN exp RPAREN • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 114


State 112

   23 blockStmt: IF LPAREN exp RPAREN LCURLY • stmtList RCURLY
   24          | IF LPAREN exp RPAREN LCURLY • stmtList RCURLY ELSE LCURLY stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 115


State 113

   32 stmt: MAYBE loc MEANS exp OTHERWISE • exp

    DASH           shift, and go to state 27
    EH             shift, and go to state 28
    FALSE          shift, and go to state 29
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 30
    LPAREN         shift, and go to state 31
    NOT            shift, and go to state 32
    STRINGLITERAL  shift, and go to state 33
    TRUE           shift, and go to state 34

    exp      go to state 116
    callExp  go to state 36
    term     go to state 37
    loc      go to state 38
    name     go to state 39


State 114

   22 blockStmt: WHILE LPAREN exp RPAREN LCURLY • stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 117


State 115

   20 stmtList: stmtList • stmt SEMICOL
   21         | stmtList • blockStmt
   23 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList • RCURLY
   24          | IF LPAREN exp RPAREN LCURLY stmtList • RCURLY ELSE LCURLY stmtList RCURLY

    FROMCONSOLE  shift, and go to state 81
    ID           shift, and go to state 4
    IF           shift, and go to state 82
    MAYBE        shift, and go to state 83
    RETURN       shift, and go to state 84
    RCURLY       shift, and go to state 118
    TOCONSOLE    shift, and go to state 86
    WHILE        shift, and go to state 87

    varDecl    go to state 88
    blockStmt  go to state 89
    stmt       go to state 90
    callExp    go to state 91
    loc        go to state 92
    name       go to state 93


State 116

   32 stmt: MAYBE loc MEANS exp OTHERWISE exp •
   35 exp: exp • DASH exp
   36    | exp • CROSS exp
   37    | exp • STAR exp
   38    | exp • SLASH exp
   39    | exp • AND exp
   40    | exp • OR exp
   41    | exp • EQUALS exp
   42    | exp • NOTEQUALS exp
   43    | exp • GREATER exp
   44    | exp • GREATEREQ exp
   45    | exp • LESS exp
   46    | exp • LESSEQ exp

    AND        shift, and go to state 46
    DASH       shift, and go to state 47
    EQUALS     shift, and go to state 48
    GREATER    shift, and go to state 49
    GREATEREQ  shift, and go to state 50
    LESS       shift, and go to state 51
    LESSEQ     shift, and go to state 52
    NOTEQUALS  shift, and go to state 53
    OR         shift, and go to state 54
    CROSS      shift, and go to state 55
    SLASH      shift, and go to state 56
    STAR       shift, and go to state 57

    $default  reduce using rule 32 (stmt)


State 117

   20 stmtList: stmtList • stmt SEMICOL
   21         | stmtList • blockStmt
   22 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList • RCURLY

    FROMCONSOLE  shift, and go to state 81
    ID           shift, and go to state 4
    IF           shift, and go to state 82
    MAYBE        shift, and go to state 83
    RETURN       shift, and go to state 84
    RCURLY       shift, and go to state 119
    TOCONSOLE    shift, and go to state 86
    WHILE        shift, and go to state 87

    varDecl    go to state 88
    blockStmt  go to state 89
    stmt       go to state 90
    callExp    go to state 91
    loc        go to state 92
    name       go to state 93


State 118

   23 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY •
   24          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY • ELSE LCURLY stmtList RCURLY

    ELSE  shift, and go to state 120

    $default  reduce using rule 23 (blockStmt)


State 119

   22 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY •

    $default  reduce using rule 22 (blockStmt)


State 120

   24 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 121


State 121

   24 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY • stmtList RCURLY

    $default  reduce using rule 19 (stmtList)

    stmtList  go to state 122


State 122

   20 stmtList: stmtList • stmt SEMICOL
   21         | stmtList • blockStmt
   24 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList • RCURLY

    FROMCONSOLE  shift, and go to state 81
    ID           shift, and go to state 4
    IF           shift, and go to state 82
    MAYBE        shift, and go to state 83
    RETURN       shift, and go to state 84
    RCURLY       shift, and go to state 123
    TOCONSOLE    shift, and go to state 86
    WHILE        shift, and go to state 87

    varDecl    go to state 88
    blockStmt  go to state 89
    stmt       go to state 90
    callExp    go to state 91
    loc        go to state 92
    name       go to state 93


State 123

   24 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY •

    $default  reduce using rule 24 (blockStmt)
